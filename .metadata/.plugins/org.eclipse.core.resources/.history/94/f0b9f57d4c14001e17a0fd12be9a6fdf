package com.yogesh.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.yogesh.model.AuthRequest;
import com.yogesh.model.UserCredential;
import com.yogesh.service.AuthService;
import com.yogesh.service.SequenceGeneratorService;

@RestController
@RequestMapping("/auth")
public class AuthController {

	private static final String SEQUENCE_NAME = null;

	@Autowired
	AuthService authService;
	
	@Autowired
	SequenceGeneratorService sequenceService;
	
	@Autowired
	AuthenticationManager authManager;
	
	@PostMapping("/register")
	public String addNewUser(@RequestBody UserCredential user) {
		user.setId(sequenceService.getSequenceNumber(SEQUENCE_NAME));
		return authService.saveUser(user);
	}
	
	@PostMapping("/token")
	public String getToken(@RequestBody AuthRequest authRequest) {
		 Authentication authenticate = authManager.authenticate(new UsernamePasswordAuthenticationToken(authRequest.getUsername(), authRequest.getPassword()));
	        if (authenticate.isAuthenticated()) {
	            return authService.generateToken(authRequest.getUsername());
	        } else {
	            throw new RuntimeException("invalid access");
	        }	}
	
	
	@GetMapping("/validate")
	public String validateToken(@RequestParam("token") String token) {
		authService.validateToken(token);
		return "Token is valid";
	}
	
	
}

